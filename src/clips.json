[
    {
        "video_gcs_path": "gs://cpet-autologger/java-cloudrun-1720309954/chunk_0/video.mp4",
        "screenshots_paths": [
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_0/screenshots/screenshot_0.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_0/screenshots/screenshot_1.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_0/screenshots/screenshot_3.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_0/screenshots/screenshot_2.jpg"
        ],
        "transcript": "Uh so I'm going to start by opening up a Google Cloud console here using my Junix account Um I'm also going to start by searching for what I need. So um deploy a Java Spring app to Google Cloud run So let's see The first uh search result I see looks promising Is a Cloud Run Quickstart that takes me into the documentation Deploy a Java Spring Boot service into Cloud Run So it looks like there is a basic sample here I'm grabbing the Spring Boot starter There's some code Cloud Run deploy So this looks actually to be kind of exactly what I want. So let's try to um let's try to run through this Um I'm not going to use the Nio guide I'm going to use the static tutorial That's just a personal preference I don't like how squished the Nio tutorials are. So I don't usually use them So let's um let's head into our project For simplicity's sake I'm just",
        "summary": "I tried to deploy a Java Spring Boot application to Google Cloud Run using a quickstart guide I found in the Google Cloud documentation. The guide suggested I write a sample application and then deploy it, so I began by searching for a Spring Boot starter project. \n",
        "sentiment": "NEUTRAL"
    },
    {
        "video_gcs_path": "gs://cpet-autologger/java-cloudrun-1720309954/chunk_1/video.mp4",
        "screenshots_paths": [
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_1/screenshots/screenshot_0.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_1/screenshots/screenshot_1.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_1/screenshots/screenshot_3.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_1/screenshots/screenshot_2.jpg"
        ],
        "transcript": "I'm going to use an a uh existing project here with billing enabled already and I'm going to use my local Mac shell uh with GCloud already installed here. So we're in and It's thinking Okay Yeah GCloud install that's good um I'm going to make sure my project is set here GCloud sandbox and I'm going to now follow these steps to write the sample application So this is interesting So um rather than cloning a GCP sample I'm going to grab the Spring boot starter pull that down into a directory called HelloWorld",
        "summary": "I wanted to deploy a Java Spring application to Google Cloud Run. I started by creating a new Google Cloud project, making sure that billing was enabled. I then tried to create a simple Spring Boot application, using a curl command to pull down the Spring Boot starter dependencies. Unfortunately, I ran into an error when executing the `gcloud` command. \n",
        "sentiment": "SOMEWHAT_NEGATIVE"
    },
    {
        "video_gcs_path": "gs://cpet-autologger/java-cloudrun-1720309954/chunk_2/video.mp4",
        "screenshots_paths": [
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_2/screenshots/screenshot_0.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_2/screenshots/screenshot_1.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_2/screenshots/screenshot_3.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_2/screenshots/screenshot_2.jpg"
        ],
        "transcript": "I think I can skip the window step because I'm on Mac OS. It's thinking. This seems tricky because I'm not seeing any bytes received, so I'm going to get out of this actually. Uh  do  do do do. So, let's just run this one at a time here. So, let's try to just curl let me just see if I can hit this. So, it seems like the server is not responding. So start.spring.io. I'm wondering if they've moved the zip maybe. Start or spelling. Yeah, so this server is not responding, so this might be a bug here in our tutorial. We might need to uh",
        "summary": "I tried to download a starter Java Spring application from start.spring.io, but the server was not responding. Then I checked the Cloud Run documentation for instructions on how to deploy a Java Spring application and decided to try a different approach by manually downloading and unzipping the starter project. \n",
        "sentiment": "SOMEWHAT_NEGATIVE"
    },
    {
        "video_gcs_path": "gs://cpet-autologger/java-cloudrun-1720309954/chunk_3/video.mp4",
        "screenshots_paths": [
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_3/screenshots/screenshot_0.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_3/screenshots/screenshot_1.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_3/screenshots/screenshot_3.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_3/screenshots/screenshot_2.jpg"
        ],
        "transcript": "Uh is it my internet? What's happening here?  Actually, it might be my internet uh for some reason my internet is not happy.  So, let's try to fix that.  Uh Well, Something's something is up.  Let's open my my network settings here.  Yes, my my internet seems to be like glitching out.",
        "summary": "I was trying to deploy a Java Spring application to Google Cloud Run, but I ran into a problem. I thought it was an internet issue, so I tried to fix my internet connection.  I checked my network settings, and then ran a speed test to see if that was the issue. \n",
        "sentiment": "SOMEWHAT_NEGATIVE"
    },
    {
        "video_gcs_path": "gs://cpet-autologger/java-cloudrun-1720309954/chunk_4/video.mp4",
        "screenshots_paths": [
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_4/screenshots/screenshot_0.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_4/screenshots/screenshot_1.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_4/screenshots/screenshot_3.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_4/screenshots/screenshot_2.jpg"
        ],
        "transcript": "It says I have an IP. It says I'm connected, but I am clearly not. Um, so let's try to fix it. Maybe I'll just switch to Google Guest. There we go. Okay. Let's try to clone this once more. Something just quirkily glitched out. We're fine now. Okay. Let's do this again. Yay. Okay. Uh, so we have our Hello World directory here. I'm going to open my IDE and open up that Hello World directory. So, here's the Spring Boot starter. Maven wrapper, source main Java. Here's our little app. Let's go back to the tutorial.",
        "summary": "I had some trouble connecting to the internet and had to switch to Google Guest to fix the issue. After that, I opened Visual Studio Code and opened the \"Hello World\" directory to get started on the Spring Boot application for the tutorial. \n",
        "sentiment": "SOMEWHAT_NEGATIVE"
    },
    {
        "video_gcs_path": "gs://cpet-autologger/java-cloudrun-1720309954/chunk_5/video.mp4",
        "screenshots_paths": [
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_5/screenshots/screenshot_0.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_5/screenshots/screenshot_1.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_5/screenshots/screenshot_3.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_5/screenshots/screenshot_2.jpg"
        ],
        "transcript": "So it wants us to update the Hello World application to I guess the source code below. So I'm going to replace all the code that's here with this and it looks like it when you hit the uh hit the index endpoint it will say Hello World. I mean yeah. Okay and then we're going to open application.properties and add the uh the port field here port 8080. And it wants us to create a project.toml file or sorry a project.toml file uh with a Java version. So I guess I should go back in to",
        "summary": "I replaced the code in the `HelloWorldApplication.java` file with the code provided in the tutorial. Then, I added a `port` field in the `application.properties` file and created a `project.toml` file with the Java version. \n",
        "sentiment": "NEUTRAL"
    },
    {
        "video_gcs_path": "gs://cpet-autologger/java-cloudrun-1720309954/chunk_6/video.mp4",
        "screenshots_paths": [
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_6/screenshots/screenshot_0.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_6/screenshots/screenshot_1.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_6/screenshots/screenshot_3.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_6/screenshots/screenshot_2.jpg"
        ],
        "transcript": "to my um Java version that the tutorial is telling me to use which is Java 17. I guess one potential point of friction here or one tricky thing is that for customers that aren't on Java 17, so like 18, 21, this might be tricky cuz they might want to bring their own Java runtime. That's okay. Uh, let's see. This quickstart assumes you have owner or editor roles? Yes, I do. Let's run gcloud run deploy. Deploying from source, from hello world, service name hello world. Let's do US Central 1, so that's 32. Uh, it's going to create an artifact registry for us. That's good. Yes, allow",
        "summary": "I tried to deploy a Spring Boot application to Google Cloud Run.  I started by following a quickstart guide that assumed I had owner or editor roles.  The tutorial instructed me to use `gcloud run deploy`, which would automatically build a container image from source code and deploy it.  I was asked to specify the service name and the region to deploy to. \n",
        "sentiment": "NEUTRAL"
    },
    {
        "video_gcs_path": "gs://cpet-autologger/java-cloudrun-1720309954/chunk_7/video.mp4",
        "screenshots_paths": [
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_7/screenshots/screenshot_0.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_7/screenshots/screenshot_1.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_7/screenshots/screenshot_3.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_7/screenshots/screenshot_2.jpg"
        ],
        "transcript": "allow unauthenticated invocations to {helloworld} (y/n)? Y Building using Buildpacks and deploying container to Cloud Run service [helloworld] in project [pcpet-sandbox] region [us-central1] Building and deploying new service...  Uploading sources... Creating Container Repository... Uploading sources... Building Container...  Logs are available at https://console.cloud.google.com/cloud-build/builds/1laa95965-feff-4ada-8850-c2327384258c/project-510756495987... Creating Revision... Routing traffic... Setting IAM Policy...  Let's see what's deploying. I also want to go back into my friction log, and remove Cloud Shell because I was using my Mac Shell. So, I think this  I can just get this done, but only Cloud Run and only Artifact Registry. So, let's wait for the deployment to finish. Something else I can do is open up the uh Cloud Run console here. \n        And hopefully eventually, see a service show up here. This is some other project but hopefully, there will be a helloworld service that shows up.",
        "summary": "I deployed a Java Spring application named \u201chelloworld\u201d to Google Cloud Run using the Cloud Shell. I also allowed unauthenticated invocations to this service. My deployment was successful, and I was able to view the logs and the service in the Cloud Run console. I also removed Cloud Shell from my friction log since I was using my Mac Shell.  \n",
        "sentiment": "POSITIVE"
    },
    {
        "video_gcs_path": "gs://cpet-autologger/java-cloudrun-1720309954/chunk_8/video.mp4",
        "screenshots_paths": [
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_8/screenshots/screenshot_0.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_8/screenshots/screenshot_1.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_8/screenshots/screenshot_3.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_8/screenshots/screenshot_2.jpg"
        ],
        "transcript": "I can also open up my build box here. It looks like So, this takes me into cloud build, and I can see that my container image is still building. So, It's using build packs to build this Java service and package up my code. Yeah, and while that's running, if I go back into this tutorial one thing that might be difficult for a customer is that in the sample app section it's not the language isn't super clear as to whether you should be adding or replacing code. So, intuitively, I understood that oh in the case of the application uh controller, I should probably replace the entire file. So, that's what I did, and I I hope that worked. But in the case of application dot properties, I added a line. So, I didn't remove line one; I simply",
        "summary": "I tried to deploy a Java Spring application to Google Cloud Run using the Cloud Build feature. I followed the steps outlined in the Google Cloud Run documentation, but I had some trouble understanding how to edit the sample application's code. Specifically, I wasn't sure whether I should be adding or replacing code in the \"application.properties\" file. In the end, I decided to add a line to the \"application.properties\" file, and I hope it worked correctly. \n",
        "sentiment": "SOMEWHAT_NEGATIVE"
    },
    {
        "video_gcs_path": "gs://cpet-autologger/java-cloudrun-1720309954/chunk_9/video.mp4",
        "screenshots_paths": [
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_9/screenshots/screenshot_0.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_9/screenshots/screenshot_1.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_9/screenshots/screenshot_3.jpg",
            "gs://cpet-autologger/java-cloudrun-1720309954/chunk_9/screenshots/screenshot_2.jpg"
        ],
        "transcript": "added line to. So, maybe the language could be clarified a little bit, um, in the tutorial itself. All right. Looks like my container built successfully, that's great. Um, so hopefully, this got pushed to Artifact Registry, and I will eventually see a service getting started up in Cloud Run. Yes, I do. Let's click on it. So, looking like it's still in pending. It's creating the revision. Great. It looks like the deployment was successful. Uh, so what's this tutorial want us to do? Visit your deployed service by opening the service URL in a web browser. So, if I click on that URL, I can see the Hello World message. So, hooray, it looks like I successfully got through this tutorial, and I have a Java 17, uh, Spring Boot app running in p-",
        "summary": "I followed a tutorial on deploying a Java Spring application to Google Cloud Run. The tutorial involved building a container image, pushing it to Artifact Registry, and deploying it to Cloud Run. I was able to successfully deploy the application and access it through its URL. The deployment process was successful and the application returned the expected \"Hello World\" message. \n",
        "sentiment": "POSITIVE"
    }
]